name: Rust CI and Release

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libasound2-dev pkg-config libgl1-mesa-dev libx11-xcb-dev libjack-jackd2-dev
      

      - name: Build
        run: cargo build --verbose

      - name: Run tests
        run: cargo test --verbose

      - name: Bundle SineSynth plugin
        run: cargo xtask bundle SineSynth

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # full git history needed

      - name: Check if Cargo.toml version changed
        id: check_version
        run: |
          git fetch origin master

          CUR_VER=$(grep '^version =' Cargo.toml | head -n1 | cut -d '"' -f2)
          git show origin/master:Cargo.toml > old_Cargo.toml
          OLD_VER=$(grep '^version =' old_Cargo.toml | head -n1 | cut -d '"' -f2)

          echo "Current version: $CUR_VER"
          echo "Old version: $OLD_VER"

          if [ "$CUR_VER" = "$OLD_VER" ]; then
            echo "version_changed=false" >> $GITHUB_OUTPUT
            echo "No version change detected. Skipping release."
          else
            echo "version_changed=true" >> $GITHUB_OUTPUT
            echo "Version changed, proceeding with release."
          fi

      - name: Get release notes from template
        if: steps.check_version.outputs.version_changed == 'true'
        id: get_release_notes
        run: |
          RELEASE_BODY=$(cat templates/release_template.md)
          echo "RELEASE_BODY<<EOF" >> $GITHUB_ENV
          echo "$RELEASE_BODY" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Create GitHub Release
        if: steps.check_version.outputs.version_changed == 'true'
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "v${{ env.CARGO_PKG_VERSION }}"
          name: Release v${{ env.CARGO_PKG_VERSION }}
          body: ${{ env.RELEASE_BODY }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload bundled clap plugin
        if: steps.check_version.outputs.version_changed == 'true'
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: target/bundled/SineSynth.clap
          asset_name: osc3-mcp-rust.clap
          asset_content_type: application/octet-stream
