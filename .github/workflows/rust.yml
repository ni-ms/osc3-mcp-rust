name: Rust CI and Release

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: write  # Required for tagging and releasing

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libasound2-dev \
            pkg-config \
            libgl1-mesa-dev \
            libx11-xcb-dev \
            libjack-jackd2-dev \
            zip

      - name: Build
        run: cargo build --verbose

      - name: Run tests
        run: cargo test --verbose

      - name: Bundle osc3-mcp-rust plugin
        run: cargo xtask bundle osc3-mcp-rust

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required for tag comparison

      - name: Check if Cargo.toml version changed
        id: check_version
        run: |
          git fetch origin master

          CUR_VER=$(grep '^version =' Cargo.toml | head -n1 | cut -d '"' -f2)
          git show origin/master:Cargo.toml > old_Cargo.toml
          OLD_VER=$(grep '^version =' old_Cargo.toml | head -n1 | cut -d '"' -f2)

          echo "Current version: $CUR_VER"
          echo "Old version: $OLD_VER"

          if [ "$CUR_VER" = "$OLD_VER" ]; then
            echo "version_changed=false" >> "$GITHUB_OUTPUT"
          else
            echo "version_changed=true" >> "$GITHUB_OUTPUT"
          fi
          echo "version=$CUR_VER" >> "$GITHUB_OUTPUT"

      - name: Create and push Git tag
        if: steps.check_version.outputs.version_changed == 'true'
        run: |
          TAG="v${{ steps.check_version.outputs.version }}"
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag "$TAG"
          git push origin "$TAG"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Zip bundled plugin
        if: steps.check_version.outputs.version_changed == 'true'
        run: |
          cd target/bundled
          zip -r ../../osc3-mcp-rust-plugin.zip .
          cd ../..

      - name: Get release notes from template
        if: steps.check_version.outputs.version_changed == 'true'
        run: |
          sed "s/{{VERSION}}/${{ steps.check_version.outputs.version }}/g" templates/release_template.md > release_notes.md

      - name: Create GitHub Release with asset
        if: steps.check_version.outputs.version_changed == 'true'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "v${{ steps.check_version.outputs.version }}"
          name: Release v${{ steps.check_version.outputs.version }}"
          body_path: release_notes.md
          files: osc3-mcp-rust-plugin.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}