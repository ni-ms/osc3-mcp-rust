name: Rust CI and Release

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

permissions:
  contents: write  # Required for tagging and releasing

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required for tag comparison

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libasound2-dev \
            pkg-config \
            libgl1-mesa-dev \
            libx11-xcb-dev \
            libjack-jackd2-dev \
            zip \
            binutils

      - name: Build in release mode
        run: cargo build --release --verbose

      - name: Bundle plugin (release)
        run: cargo xtask bundle osc3-mcp-rust --release

      - name: Strip binary
        run: strip target/bundled/osc3-mcp-rust

      - name: Get version from Cargo.toml
        id: get_version
        run: |
          VERSION=$(grep '^version = ' Cargo.toml | head -n1 | sed 's/version = "//;s/"//')
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "tag=v$VERSION" >> $GITHUB_OUTPUT

      - name: Check if tag exists
        id: check_tag
        run: |
          if git rev-parse "${{ steps.get_version.outputs.tag }}" >/dev/null 2>&1; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Create tag
        if: github.ref == 'refs/heads/master' && steps.check_tag.outputs.exists == 'false'
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git tag ${{ steps.get_version.outputs.tag }}
          git push origin ${{ steps.get_version.outputs.tag }}

      - name: Fetch tags
        if: github.ref == 'refs/heads/master' && steps.check_tag.outputs.exists == 'false'
        run: git fetch --tags

      - name: Create release package
        if: github.ref == 'refs/heads/master' && steps.check_tag.outputs.exists == 'false'
        run: |
          mkdir -p dist
          cp target/bundled/osc3-mcp-rust dist/
          zip -j osc3-mcp-rust-plugin.zip dist/osc3-mcp-rust

      - name: Generate release notes
        if: github.ref == 'refs/heads/master' && steps.check_tag.outputs.exists == 'false'
        run: |
          sed "s/{{VERSION}}/${{ steps.get_version.outputs.version }}/g" templates/release_template.md > release_notes.md

      - name: Create GitHub Release
        if: github.ref == 'refs/heads/master' && steps.check_tag.outputs.exists == 'false'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.get_version.outputs.tag }}
          name: "osc3-mcp-rust ${{ steps.get_version.outputs.tag }}"
          body_path: release_notes.md
          files: osc3-mcp-rust-plugin.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
